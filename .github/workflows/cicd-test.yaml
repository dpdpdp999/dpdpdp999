# This workflow will build a MuleSoft project and deploy to CloudHub Test env

name: Build and Deploy to Test
on:
  push:
    branches: [ test-cicd ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: 10eeffa3f9184598b38dad7f43e024ab
      CA_CLIENT_SECRET: 0cD3022eCA514812Bc464a85D5635db6
    
    steps:
    
    - name: Checkout this repo
      uses: actions/checkout@v3
    
    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
           
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with maven
      run: mvn -B clean package -s .maven/settings.xml -DskipMunitTests
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls expapi/target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls expapi/target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: expapi/target/*.jar
          
  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: 10eeffa3f9184598b38dad7f43e024ab
      CA_CLIENT_SECRET: 0cD3022eCA514812Bc464a85D5635db6          
    
    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Upload to Exchange
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -s .maven/settings.xml -Dmule.artifact=$artifactName -DskipMunitTests
         
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      CA_CLIENT_ID: 10eeffa3f9184598b38dad7f43e024ab
      CA_CLIENT_SECRET: 0cD3022eCA514812Bc464a85D5635db6
      ANYPOINT_PLATFORM_CLIENT_ID: 46d8b90ed18c42e8831a67ec0767aa2d
      ANYPOINT_PLATFORM_CLIENT_SECRET: 2e3afa3D41fF4799B6537876e9dDA1B9
      
    steps:    
  
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Cache dependencies
      uses: actions/download-artifact@master
      with:
        name: artifacts
    - name: Deploy to Test
      run: |
        artifactName=$(ls *.jar | head -1)
        
        mvn deploy -e -DmuleDeploy -Dmule.artifact=$artifactName -s .maven/settings.xml -DskipTests --file pom.xml
